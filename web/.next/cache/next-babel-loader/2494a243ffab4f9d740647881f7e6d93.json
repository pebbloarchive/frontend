{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\[username].tsx\";\nimport { getUser } from \"../../graphql/queries/user\";\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\";\nimport Nav from '../components/Nav';\nimport NotFound from '../pages/404';\nimport styles from '../css/profile/profile.module.css';\n\nconst username = ({\n  data: {\n    data,\n    loading\n  }\n}) => {\n  console.log(data.user);\n\n  if (!data || !data.user || data.user.errors) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.profile,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.information,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.avatar,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.user ? data.user.avatar : '',\n              alt: `${data.user.name} || ${data.user.username}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.about,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.name,\n            children: data.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styles.username,\n            children: data.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async context => {\n  const client = getApolloClient();\n  const data = await client.query({\n    query: getUser,\n    variables: {\n      username: context.params.username\n    }\n  });\n  return {\n    props: {\n      apolloStaticCache: client.cache.extract(),\n      data\n    }\n  };\n};\nexport default withApollo(username);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/[username].tsx"],"names":["getUser","getApolloClient","withApollo","Nav","NotFound","styles","username","data","loading","console","log","user","errors","content","profile","information","avatar","name","about","getServerSideProps","context","client","query","variables","params","props","apolloStaticCache","cache","extract"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,oCAA5C;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAR,CAAD,KAAiC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;;AACA,MAAG,CAACJ,IAAD,IAAS,CAACA,IAAI,CAACI,IAAf,IAAuBJ,IAAI,CAACI,IAAL,CAAUC,MAApC,EAA4C;AACxC,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGJ,OAAH,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACI;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACQ,OAAvB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAER,MAAM,CAACS,OAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAET,MAAM,CAACU,WAAvB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEV,MAAM,CAACW,MAAvB;AAAA,mCACE;AAAK,cAAA,GAAG,EAAET,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACI,IAAL,CAAUK,MAAtB,GAA+B,EAAzC;AAA6C,cAAA,GAAG,EAAG,GAAET,IAAI,CAACI,IAAL,CAAUM,IAAK,OAAMV,IAAI,CAACI,IAAL,CAAUL,QAAS;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAED,MAAM,CAACa,KAAvB;AAAA,kCACE;AAAI,YAAA,SAAS,EAAEb,MAAM,CAACY,IAAtB;AAAA,sBAA6BV,IAAI,CAACI,IAAL,CAAUM;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAEZ,MAAM,CAACC,QAAtB;AAAA,sBAAiCC,IAAI,CAACI,IAAL,CAAUL;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkBH,CA5BD;;AA8BA,OAAO,MAAMa,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACrE,QAAMC,MAAM,GAAGpB,eAAe,EAA9B;AACA,QAAMM,IAAI,GAAG,MAAMc,MAAM,CAACC,KAAP,CAAa;AAC9BA,IAAAA,KAAK,EAAEtB,OADuB;AAE9BuB,IAAAA,SAAS,EAAE;AAAEjB,MAAAA,QAAQ,EAAEc,OAAO,CAACI,MAAR,CAAelB;AAA3B;AAFmB,GAAb,CAAnB;AAIA,SAAO;AACLmB,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAEL,MAAM,CAACM,KAAP,CAAaC,OAAb,EADd;AAELrB,MAAAA;AAFK;AADF,GAAP;AAMH,CAZM;AAcP,eAAeL,UAAU,CAACI,QAAD,CAAzB","sourcesContent":["import { getUser } from \"../../graphql/queries/user\";\r\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\"\r\nimport { GetServerSideProps } from \"next\";\r\nimport Nav from '../components/Nav';\r\nimport NotFound from '../pages/404'\r\nimport styles from '../css/profile/profile.module.css';\r\n\r\nconst username = ({ data: { data, loading } }) => {\r\n    console.log(data.user)\r\n    if(!data || !data.user || data.user.errors) {\r\n        return <NotFound />\r\n    }\r\n\r\n    if(loading) {\r\n      return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <div className={styles.content}>\r\n              <div className={styles.profile}>\r\n                <div className={styles.information}>                \r\n                  <div className={styles.avatar}>\r\n                    <img src={data.user ? data.user.avatar : ''} alt={`${data.user.name} || ${data.user.username}`} />\r\n                  </div>\r\n                </div>\r\n                <div className={styles.about}>\r\n                  <h1 className={styles.name}>{data.user.name}</h1>\r\n                  <h1 className={styles.username}>{data.user.username}</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const client = getApolloClient();\r\n    const data = await client.query({\r\n      query: getUser,\r\n      variables: { username: context.params.username as string }\r\n    });\r\n    return {\r\n      props: {\r\n        apolloStaticCache: client.cache.extract(),\r\n        data\r\n      }\r\n    };\r\n}\r\n\r\nexport default withApollo(username);\r\n"]},"metadata":{},"sourceType":"module"}