{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\[username].tsx\";\nimport { getUser } from \"../../graphql/queries/user\";\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\";\nimport Nav from '../components/Nav';\n\nconst username = ({\n  data,\n  error\n}) => {\n  const styles = {\n    margin: \"auto\",\n    width: \"50%\",\n    padding: \"10px\"\n  };\n\n  if (!data || !(data === null || data === void 0 ? void 0 : data.user)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (data === null || data === void 0 ? void 0 : data.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: data === null || data === void 0 ? void 0 : data.user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async context => {\n  const client = getApolloClient();\n  const {\n    data\n  } = await client.query({\n    query: getUser,\n    variables: {\n      username: context.params.username\n    }\n  });\n  return {\n    props: {\n      apolloStaticCache: client.cache.extract(),\n      data\n    }\n  };\n};\nexport default withApollo(username);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/[username].tsx"],"names":["getUser","getApolloClient","withApollo","Nav","username","data","error","styles","margin","width","padding","user","loading","getServerSideProps","context","client","query","variables","params","props","apolloStaticCache","cache","extract"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,oCAA5C;AAGA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAClC,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,KAAK,EAAE,KAFM;AAGbC,IAAAA,OAAO,EAAE;AAHI,GAAf;;AAMA,MAAG,CAACL,IAAD,IAAS,EAACA,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,IAAP,CAAZ,EAAyB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,OAAT,EAAkB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,KAAK,EAAEL,MAAV;AAAA,gBAAmBF,IAAnB,aAAmBA,IAAnB,uBAAmBA,IAAI,CAAEM,IAAN,CAAWP;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CArBD;;AAuBA,OAAO,MAAMS,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACrE,QAAMC,MAAM,GAAGd,eAAe,EAA9B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAW,MAAMU,MAAM,CAACC,KAAP,CAAa;AAClCA,IAAAA,KAAK,EAAEhB,OAD2B;AAElCiB,IAAAA,SAAS,EAAE;AAAEb,MAAAA,QAAQ,EAAEU,OAAO,CAACI,MAAR,CAAed;AAA3B;AAFuB,GAAb,CAAvB;AAIA,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAEL,MAAM,CAACM,KAAP,CAAaC,OAAb,EADd;AAELjB,MAAAA;AAFK;AADF,GAAP;AAMH,CAZM;AAcP,eAAeH,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import { useQuery } from \"@apollo/client\"\r\nimport { getUser } from \"../../graphql/queries/user\";\r\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\"\r\nimport { useRouter } from 'next/router';\r\nimport { GetServerSideProps } from \"next\";\r\nimport Nav from '../components/Nav';\r\n\r\nconst username = ({ data, error }) => {\r\n    const styles = {\r\n      margin: \"auto\",\r\n      width: \"50%\",\r\n      padding: \"10px\"\r\n    }\r\n\r\n    if(!data || !data?.user) {\r\n        return <p>:(</p>\r\n    }\r\n    \r\n    if(data?.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <p style={styles}>{data?.user.username}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const client = getApolloClient();\r\n    const { data } = await client.query({\r\n      query: getUser,\r\n      variables: { username: context.params.username as string }\r\n    });\r\n    return {\r\n      props: {\r\n        apolloStaticCache: client.cache.extract(),\r\n        data\r\n      }\r\n    };\r\n}\r\n\r\nexport default withApollo(username);\r\n"]},"metadata":{},"sourceType":"module"}