{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\components\\\\hooks\\\\withApolloHook.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport * as React from 'react';\nimport { ApolloProvider } from '@apollo/client';\nconst CLIENT_URL = true ? 'https://pebblo.org/api' : 'http://localhost:4000/api';\nconst endpoint = `${CLIENT_URL}/query`;\nconst link = new HttpLink({\n  uri: endpoint,\n  credentials: \"include\"\n});\nconst isBrowser = process.browser;\nexport const getApolloClient = ctx => {\n  var _ctx$req;\n\n  return new ApolloClient({\n    headers: {\n      cookie: (true ? ctx === null || ctx === void 0 ? void 0 : (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie : undefined) || \"\"\n    },\n    credentials: 'include',\n    link,\n    cache: new InMemoryCache()\n  });\n};\nexport function withApollo(PageComponent) {\n  // eslint-disable-next-line\n  const WithApollo = (_ref) => {\n    let {\n      apolloStaticCache\n    } = _ref,\n        pageProps = _objectWithoutProperties(_ref, [\"apolloStaticCache\"]);\n\n    // apolloStaticCache prop gets set in getStaticProps on page views\n    const client = getApolloClient(apolloStaticCache);\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(PageComponent, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }; // Set the correct displayName in development\n\n\n  if (true) {\n    const displayName = PageComponent.displayName || PageComponent.name || 'Component';\n    WithApollo.displayName = `withApollo(${displayName})`;\n  }\n\n  return WithApollo;\n}","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/components/hooks/withApolloHook.tsx"],"names":["ApolloClient","HttpLink","InMemoryCache","React","ApolloProvider","CLIENT_URL","endpoint","link","uri","credentials","isBrowser","process","browser","getApolloClient","ctx","headers","cookie","req","undefined","cache","withApollo","PageComponent","WithApollo","apolloStaticCache","pageProps","client","displayName","name"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAA6E,gBAA7E;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,MAAMC,UAAU,GAAG,OAAwC,wBAAxC,GAAmE,2BAAtF;AACA,MAAMC,QAAQ,GAAI,GAAED,UAAW,QAA/B;AACA,MAAME,IAAI,GAAG,IAAIN,QAAJ,CAAa;AAAEO,EAAAA,GAAG,EAAEF,QAAP;AAAiBG,EAAAA,WAAW,EAAE;AAA9B,CAAb,CAAb;AACA,MAAMC,SAAkB,GAAIC,OAAD,CAAiBC,OAA5C;AAEA,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAA0B;AAAA;;AACrD,SAAO,IAAId,YAAJ,CAAiB;AACpBe,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EACJ,CAAC,OACGF,GADH,aACGA,GADH,mCACGA,GAAG,CAAEG,GADR,6CACG,SAAUF,OAAV,CAAkBC,MADrB,GAEGE,SAFJ,KAEkB;AAJf,KADW;AAOpBT,IAAAA,WAAW,EAAE,SAPO;AAQpBF,IAAAA,IARoB;AASpBY,IAAAA,KAAK,EAAE,IAAIjB,aAAJ;AATa,GAAjB,CAAP;AAWH,CAZM;AAcP,OAAO,SAASkB,UAAT,CAAoBC,aAApB,EAAmC;AACxC;AACA,QAAMC,UAAU,GAAG,UAAyC;AAAA,QAAxC;AAAEC,MAAAA;AAAF,KAAwC;AAAA,QAAhBC,SAAgB;;AAC1D;AACA,UAAMC,MAAM,GAAGZ,eAAe,CAACU,iBAAD,CAA9B;AACA,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEE,MAAxB;AAAA,6BACE,QAAC,aAAD,oBAAmBD,SAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GARD,CAFwC,CAYxC;;;AACA,YAA2C;AACzC,UAAME,WAAW,GACfL,aAAa,CAACK,WAAd,IAA6BL,aAAa,CAACM,IAA3C,IAAmD,WADrD;AAGAL,IAAAA,UAAU,CAACI,WAAX,GAA0B,cAAaA,WAAY,GAAnD;AACD;;AAED,SAAOJ,UAAP;AACD","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache, NormalizedCacheObject } from \"@apollo/client\";\r\nimport { NextPageContext } from \"next\";\r\nimport * as React from 'react'\r\nimport { ApolloProvider } from '@apollo/client'\r\n\r\nconst CLIENT_URL = process.env.NODE_ENV !== 'production' ? 'https://pebblo.org/api' : 'http://localhost:4000/api';\r\nconst endpoint = `${CLIENT_URL}/query`;\r\nconst link = new HttpLink({ uri: endpoint, credentials: \"include\" });\r\nconst isBrowser: boolean = (process as any).browser;\r\n\r\nexport const getApolloClient = (ctx: NextPageContext) => {\r\n    return new ApolloClient({\r\n        headers: {\r\n            cookie:\r\n              (typeof window === \"undefined\"\r\n                ? ctx?.req?.headers.cookie\r\n                : undefined) || \"\",\r\n        },\r\n        credentials: 'include',\r\n        link, \r\n        cache: new InMemoryCache(), \r\n    });\r\n}\r\n\r\nexport function withApollo(PageComponent) {\r\n  // eslint-disable-next-line\r\n  const WithApollo = ({ apolloStaticCache, ...pageProps }) => {\r\n    // apolloStaticCache prop gets set in getStaticProps on page views\r\n    const client = getApolloClient(apolloStaticCache)\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <PageComponent {...pageProps} />\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n\r\n  // Set the correct displayName in development\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const displayName =\r\n      PageComponent.displayName || PageComponent.name || 'Component'\r\n\r\n    WithApollo.displayName = `withApollo(${displayName})`\r\n  }\r\n\r\n  return WithApollo\r\n}\r\n"]},"metadata":{},"sourceType":"module"}