{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\index.tsx\";\nimport { useQuery } from '@apollo/client';\nimport { getUser } from '../../graphql/queries/user';\nimport { withApollo } from '../components/hooks/withApolloHook';\nimport Nav from '../components/Nav';\n\nconst Index = () => {\n  // const { theme, setTheme } = useTheme()\n  // const [color, setColor] = useState([]);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(getUser, {\n    variables: {\n      username: 'kylee'\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  if (error) {\n    console.log(error.message);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/index.tsx"],"names":["useQuery","getUser","withApollo","Nav","Index","data","error","loading","variables","username","console","log","message"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,gBAAzB;AAIA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACC,OAAD,EAAU;AACjDO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AADsC,GAAV,CAAzC;AAIA,MAAGF,OAAH,EAAY,oBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;;AAIZ,MAAGD,KAAH,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,OAAlB;AACA,wBACI;AAAA,gBAAIN,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAED,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAxBD;;AA0BA,eAAeV,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["\nimport { useQuery } from '@apollo/client';\nimport { useTheme } from 'next-themes'\nimport { useState } from 'react'\nimport { meQuery } from '../../graphql/queries/me';\nimport { getUser } from '../../graphql/queries/user';\nimport { withApollo } from '../components/hooks/withApolloHook';\nimport Nav from '../components/Nav';\n\nconst Index = () => {\n  // const { theme, setTheme } = useTheme()\n  // const [color, setColor] = useState([]);\n  \n  const { data, error, loading } = useQuery(getUser, {\n    variables: { username: 'kylee' }\n  });\n\n  if(loading) return (\n    <p>Loading...</p>\n  )\n\n  if(error) {\n    console.log(error.message)\n    return (\n        <p>{error.message}</p>\n    )\n  }\n\n  return (\n    <>\n      <Nav/>\n    </>\n  )\n}\n\nexport default withApollo(Index);\n"]},"metadata":{},"sourceType":"module"}