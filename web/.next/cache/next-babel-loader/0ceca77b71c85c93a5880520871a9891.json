{"ast":null,"code":"export var useConvertUnixTimestamp = function useConvertUnixTimestamp(timestamp) {\n  if (!timestamp) {\n    return {\n      minutes: null,\n      hours: null,\n      created: null\n    };\n  }\n\n  var now = new Date().valueOf(); // this now\n\n  var created = parseInt(timestamp); // then\n\n  var diff = now - created;\n  var minutes = Math.ceil(diff / 1000 / 60);\n  var hours = Math.floor(minutes / 60);\n  var date = new Date(created).toDateString();\n  return {\n    minutes: minutes,\n    hours: hours,\n    date: date\n  };\n};","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/frontend/web/web/src/components/hooks/useConvertUnixTimestamp.ts"],"names":["useConvertUnixTimestamp","timestamp","minutes","hours","created","now","Date","valueOf","parseInt","diff","Math","ceil","floor","date","toDateString"],"mappings":"AAEA,OAAO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,SAAD,EAAwB;AAC7D,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,KAAK,EAAE,IAFF;AAGLC,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;;AACD,MAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ,CAR6D,CAQ3B;;AAClC,MAAMH,OAAO,GAAGI,QAAQ,CAACP,SAAD,CAAxB,CAT6D,CASxB;;AACrC,MAAMQ,IAAI,GAAGJ,GAAG,GAAGD,OAAnB;AACA,MAAMF,OAAY,GAAGQ,IAAI,CAACC,IAAL,CAAUF,IAAI,GAAG,IAAP,GAAc,EAAxB,CAArB;AACA,MAAMN,KAAK,GAAGO,IAAI,CAACE,KAAL,CAAWV,OAAO,GAAG,EAArB,CAAd;AACA,MAAMW,IAAI,GAAG,IAAIP,IAAJ,CAASF,OAAT,EAAkBU,YAAlB,EAAb;AAEA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLU,IAAAA,IAAI,EAAJA;AAHK,GAAP;AAKD,CApBM","sourcesContent":["import { time } from \"console\";\r\n\r\nexport const useConvertUnixTimestamp = (timestamp?: string) => {\r\n  if (!timestamp) {\r\n    return {\r\n      minutes: null,\r\n      hours: null,\r\n      created: null,\r\n    };\r\n  }\r\n  const now = new Date().valueOf(); // this now\r\n  const created = parseInt(timestamp); // then\r\n  const diff = now - created;\r\n  const minutes: any = Math.ceil(diff / 1000 / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const date = new Date(created).toDateString();\r\n\r\n  return {\r\n    minutes,\r\n    hours,\r\n    date,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}