{"ast":null,"code":"import { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\nimport { createWithApollo } from './createWithApollo';\nconst CLIENT_URL = true ? 'https://pebblo.org/api' : 'http://localhost:4000/api';\nconst endpoint = `${CLIENT_URL}/query`;\nconst link = new HttpLink({\n  uri: endpoint,\n  credentials: \"include\"\n});\nconst isBrowser = process.browser;\nexport const getApolloClient = ctx => {\n  var _ctx$req;\n\n  return new ApolloClient({\n    headers: {\n      cookie: (true ? ctx === null || ctx === void 0 ? void 0 : (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie : undefined) || \"\"\n    },\n    credentials: 'include',\n    link,\n    cache: new InMemoryCache()\n  });\n};\nexport const withApollo = createWithApollo(getApolloClient);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/components/hooks/withApolloHook.ts"],"names":["ApolloClient","HttpLink","InMemoryCache","createWithApollo","CLIENT_URL","endpoint","link","uri","credentials","isBrowser","process","browser","getApolloClient","ctx","headers","cookie","req","undefined","cache","withApollo"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAA6E,gBAA7E;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,MAAMC,UAAU,GAAG,OAAwC,wBAAxC,GAAmE,2BAAtF;AACA,MAAMC,QAAQ,GAAI,GAAED,UAAW,QAA/B;AACA,MAAME,IAAI,GAAG,IAAIL,QAAJ,CAAa;AAAEM,EAAAA,GAAG,EAAEF,QAAP;AAAiBG,EAAAA,WAAW,EAAE;AAA9B,CAAb,CAAb;AACA,MAAMC,SAAkB,GAAIC,OAAD,CAAiBC,OAA5C;AAEA,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAA0B;AAAA;;AACrD,SAAO,IAAIb,YAAJ,CAAiB;AACpBc,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EACJ,CAAC,OACGF,GADH,aACGA,GADH,mCACGA,GAAG,CAAEG,GADR,6CACG,SAAUF,OAAV,CAAkBC,MADrB,GAEGE,SAFJ,KAEkB;AAJf,KADW;AAOpBT,IAAAA,WAAW,EAAE,SAPO;AAQpBF,IAAAA,IARoB;AASpBY,IAAAA,KAAK,EAAE,IAAIhB,aAAJ;AATa,GAAjB,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMiB,UAAU,GAAGhB,gBAAgB,CAACS,eAAD,CAAnC","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache, NormalizedCacheObject } from \"@apollo/client\";\r\nimport { NextPageContext } from \"next\";\r\nimport { createWithApollo } from './createWithApollo';\r\n\r\nconst CLIENT_URL = process.env.NODE_ENV !== 'production' ? 'https://pebblo.org/api' : 'http://localhost:4000/api';\r\nconst endpoint = `${CLIENT_URL}/query`;\r\nconst link = new HttpLink({ uri: endpoint, credentials: \"include\" });\r\nconst isBrowser: boolean = (process as any).browser;\r\n\r\nexport const getApolloClient = (ctx: NextPageContext) => {\r\n    return new ApolloClient({\r\n        headers: {\r\n            cookie:\r\n              (typeof window === \"undefined\"\r\n                ? ctx?.req?.headers.cookie\r\n                : undefined) || \"\",\r\n        },\r\n        credentials: 'include',\r\n        link, \r\n        cache: new InMemoryCache(), \r\n    });\r\n}\r\n\r\nexport const withApollo = createWithApollo(getApolloClient);"]},"metadata":{},"sourceType":"module"}