{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\index.tsx\";\nimport { useQuery } from '@apollo/client';\nimport { me } from '../../graphql/queries/me';\nimport { withApollo } from '../components/hooks/withApolloHook';\n\nconst Index = () => {\n  // const { theme, setTheme } = useTheme()\n  // const [color, setColor] = useState([]);\n  const data = useQuery(me, {\n    variables: 'kylee'\n  });\n\n  if (data.data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSOn.stringify(data.data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <br></br>\n    //   {/* @ts-ignore */}\n    //   <center>\n    //     <br></br>\n    //     <br></br>\n    //     {theme !== undefined && (\n    //       <select value={theme} onChange={(e) => setTheme(e.target.value)}>\n    //         <option value=\"dark\">Dark</option>\n    //         <option value=\"light\">Light</option>\n    //         <option value=\"system\">System</option>\n    //       </select>\n    //     )}\n    //     <br></br>\n    //     <br></br>\n    //     <p style={{ color: 'saddlebrown' }}>Hello earthlings!</p>\n    //     {/* {theme ?  <p style={{ color: 'white' }}>Hello</p> : <p style={{ color: 'black' }}>Hello</p> } */}\n    //   {/* @ts-ignore */}\n    //   </center>\n    // </div>\n    // <Nav/>\n    _jsxDEV(\"p\", {\n      children: \"penis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/index.tsx"],"names":["useQuery","me","withApollo","Index","data","variables","JSOn","stringify"],"mappings":";;AACA,SAASA,QAAT,QAAyB,gBAAzB;AAGA,SAASC,EAAT,QAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,oCAA3B;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AAEA,QAAMC,IAAI,GAAGJ,QAAQ,CAACC,EAAD,EAAK;AACxBI,IAAAA,SAAS,EAAE;AADa,GAAL,CAArB;;AAIA,MAAGD,IAAI,CAACA,IAAR,EAAc;AACZ,wBACE;AAAA,gBAAIE,IAAI,CAACC,SAAL,CAAeH,IAAI,CAACA,IAApB;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBF;AAwBD,CAtCD;;AAwCA,eAAeF,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["\nimport { useQuery } from '@apollo/client';\nimport { useTheme } from 'next-themes'\nimport { useState } from 'react'\nimport { me } from '../../graphql/queries/me';\nimport { withApollo } from '../components/hooks/withApolloHook';\nimport Nav from '../components/Nav';\n\nconst Index = () => {\n  // const { theme, setTheme } = useTheme()\n  // const [color, setColor] = useState([]);\n  \n  const data = useQuery(me, {\n    variables: 'kylee'\n  });\n\n  if(data.data) {\n    return (\n      <p>{JSOn.stringify(data.data)}</p>\n    )\n  }\n\n  return (\n    // <div>\n    //   <br></br>\n    //   {/* @ts-ignore */}\n    //   <center>\n    //     <br></br>\n    //     <br></br>\n    //     {theme !== undefined && (\n    //       <select value={theme} onChange={(e) => setTheme(e.target.value)}>\n    //         <option value=\"dark\">Dark</option>\n    //         <option value=\"light\">Light</option>\n    //         <option value=\"system\">System</option>\n    //       </select>\n    //     )}\n    //     <br></br>\n    //     <br></br>\n    //     <p style={{ color: 'saddlebrown' }}>Hello earthlings!</p>\n    //     {/* {theme ?  <p style={{ color: 'white' }}>Hello</p> : <p style={{ color: 'black' }}>Hello</p> } */}\n    //   {/* @ts-ignore */}\n    //   </center>\n    // </div>\n    // <Nav/>\n    <p>penis</p>\n  )\n}\n\nexport default withApollo(Index);\n"]},"metadata":{},"sourceType":"module"}