{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\[username].tsx\";\nimport { getUser } from \"../../graphql/queries/user\";\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\";\nimport Nav from '../components/Nav';\n\nconst username = ({\n  data: {\n    data,\n    error,\n    loading\n  }\n}) => {\n  console.log(data);\n  const styles = {\n    margin: \"auto\",\n    width: \"50%\",\n    padding: \"10px\"\n  };\n\n  if (!data || !data.user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (data === null || data === void 0 ? void 0 : data.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data === null || data === void 0 ? void 0 : data.error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: data.user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getServerSideProps = async context => {\n  const client = getApolloClient();\n  const data = await client.query({\n    query: getUser,\n    variables: {\n      username: context.params.username\n    }\n  });\n  return {\n    props: {\n      apolloStaticCache: client.cache.extract(),\n      data\n    }\n  };\n};\nexport default withApollo(username);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/[username].tsx"],"names":["getUser","getApolloClient","withApollo","Nav","username","data","error","loading","console","log","styles","margin","width","padding","user","message","getServerSideProps","context","client","query","variables","params","props","apolloStaticCache","cache","extract"],"mappings":";;;AACA,SAASA,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,oCAA5C;AAGA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf;AAAR,CAAD,KAAwC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAMK,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,KAAK,EAAE,KAFM;AAGbC,IAAAA,OAAO,EAAE;AAHI,GAAf;;AAMA,MAAG,CAACR,IAAD,IAAS,CAACA,IAAI,CAACS,IAAlB,EAAwB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGR,KAAH,EAAU,oBACR;AAAA,cAAIA,KAAK,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,UADQ;;AAIV,MAAGR,OAAH,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEC,KAAT,EAAgB;AACZ,wBAAO;AAAA,gBAAID,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,KAAN,CAAYS;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,KAAK,EAAEL,MAAV;AAAA,gBAAmBL,IAAI,CAACS,IAAL,CAAUV;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA/BD;;AAiCA,OAAO,MAAMY,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACrE,QAAMC,MAAM,GAAGjB,eAAe,EAA9B;AACA,QAAMI,IAAI,GAAG,MAAMa,MAAM,CAACC,KAAP,CAAa;AAC9BA,IAAAA,KAAK,EAAEnB,OADuB;AAE9BoB,IAAAA,SAAS,EAAE;AAAEhB,MAAAA,QAAQ,EAAEa,OAAO,CAACI,MAAR,CAAejB;AAA3B;AAFmB,GAAb,CAAnB;AAIA,SAAO;AACLkB,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAEL,MAAM,CAACM,KAAP,CAAaC,OAAb,EADd;AAELpB,MAAAA;AAFK;AADF,GAAP;AAMH,CAZM;AAcP,eAAeH,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import { useQuery } from \"@apollo/client\"\r\nimport { getUser } from \"../../graphql/queries/user\";\r\nimport { getApolloClient, withApollo } from \"../components/hooks/withApolloHook\"\r\nimport { useRouter } from 'next/router';\r\nimport { GetServerSideProps } from \"next\";\r\nimport Nav from '../components/Nav';\r\n\r\nconst username = ({ data: { data, error, loading } }) => {\r\n    console.log(data)\r\n    const styles = {\r\n      margin: \"auto\",\r\n      width: \"50%\",\r\n      padding: \"10px\"\r\n    }\r\n\r\n    if(!data || !data.user) {\r\n        return <p>:(</p>\r\n    }\r\n\r\n    if(error) return (\r\n      <p>{error.message}</p>\r\n    )\r\n    \r\n    if(loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n    \r\n    if(data?.error) {\r\n        return <p>{data?.error.message}</p>\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <p style={styles}>{data.user.username}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n    const client = getApolloClient();\r\n    const data = await client.query({\r\n      query: getUser,\r\n      variables: { username: context.params.username as string }\r\n    });\r\n    return {\r\n      props: {\r\n        apolloStaticCache: client.cache.extract(),\r\n        data\r\n      }\r\n    };\r\n}\r\n\r\nexport default withApollo(username);\r\n"]},"metadata":{},"sourceType":"module"}