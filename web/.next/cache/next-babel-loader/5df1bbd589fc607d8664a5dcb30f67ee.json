{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\root\\\\Desktop\\\\dev\\\\api2.pebblo.org\\\\frontend\\\\src\\\\pages\\\\[username].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nimport { getUser } from \"../../graphql/queries/user\";\nimport { withApollo } from \"../components/hooks/withApolloHook\";\n\nvar username = function username() {\n  _s();\n\n  // const router = useRouter();\n  var _useQuery = useQuery(getUser),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.user)) {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: \"sad times man\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"ahoy \", JSON.stringify(data.user)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(username, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\nexport default withApollo(username);","map":{"version":3,"sources":["C:/Users/root/Desktop/dev/api2.pebblo.org/frontend/src/pages/[username].tsx"],"names":["useQuery","getUser","withApollo","username","data","error","loading","message","user","JSON","stringify"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,UAAT,QAA2B,oCAA3B;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACnB;AADmB,kBAEcH,QAAQ,CAACC,OAAD,CAFtB;AAAA,MAEXG,IAFW,aAEXA,IAFW;AAAA,MAELC,KAFK,aAELA,KAFK;AAAA,MAEEC,OAFF,aAEEA,OAFF;;AAInB,MAAGA,OAAH,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAGD,KAAH,EAAU;AACN,wBAAO;AAAA,gBAAMA,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAGD,MAAG,EAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,IAAP,CAAH,EAAgB;AACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAED,sBACI;AAAA,wBAASC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACI,IAApB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CApBD;;GAAML,Q;UAE+BH,Q;;;AAoBrC,eAAeE,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import { useQuery } from \"@apollo/client\"\r\nimport { getUser } from \"../../graphql/queries/user\";\r\nimport { withApollo } from \"../components/hooks/withApolloHook\"\r\nimport { useRouter } from 'next/router';\r\n\r\nconst username = () => {\r\n    // const router = useRouter();\r\n    const { data, error, loading } = useQuery(getUser);\r\n\r\n    if(loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    if(error) {\r\n        return <div>{error.message}</div>\r\n    }\r\n\r\n\r\n    if(!data?.user) {\r\n        <p>sad times man</p>\r\n    }\r\n\r\n    return (\r\n        <p>ahoy {JSON.stringify(data.user)}</p>\r\n    )\r\n}\r\n\r\nexport default withApollo(username);\r\n"]},"metadata":{},"sourceType":"module"}